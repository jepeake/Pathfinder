module rbg2hsv (
    //rgb inputs
    input wire [7:0] red,
    input wire [7:0] green,
    input wire [7:0] blue,
    //HSV outputs
    output reg [8:0] hue,
    output reg [7:0] saturation,
    output reg [7:0] value
);

always @* begin
    // Convert RGB values to the range 0-1
    reg [7:0] r = red / 255.0;
    reg [7:0] g = green / 255.0;
    reg [7:0] b = blue / 255.0;

    // Find the maximum and minimum values
    reg [7:0] max_val, min_val;
    if (r >= g && r >= b) begin
      max_val = r;
      min_val = (g < b) ? g : b;
    end 
    else if (g >= r && g >= b) begin
      max_val = g;
      min_val = (r < b) ? r : b;
    end 
    else begin
      max_val = b;
      min_val = (r < g) ? r : g;
    end
    
    // Calculate value (V)
    value = max_val;

    reg [7:0] delta;
    delta = max_val - min_val;

    // Calculate saturation (S)
    if (max_val == 0) begin
      saturation = 0;
    end 
    else begin
      saturation = (delta) / max_val;
    end

    // Calculate hue (H)
    if (max_val == min_val) begin
      hue = 0;
    end 
    else if (max_val == r) begin
      hue = (g - b) / (delta);
    end 
    else if (max_val == g) begin
      hue = 2 + (b - r) / (delta);
    end 
    else if (max_val == b) begin
      hue = 4 + (r - g) / (delta);
    end

    if (hue < 0) begin
      hue = hue + 6;
    end

    // Convert hue to the range 0-360
    hue = hue * 60;

  end
endmodule
